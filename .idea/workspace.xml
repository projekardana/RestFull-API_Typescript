<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2c7b5bef-9368-4777-8eea-0a1869fe9348" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/test/test.util.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/application/database.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/application/database.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/middleware/error-middleware.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/middleware/error-middleware.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/user-test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/test/user-test.test.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2t43m3qcbbZXQZFmTCw2mwyN8vC" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.POST /api/users (2).executor": "Run",
    "Jest.POST /api/users.executor": "Run",
    "Jest.POST /api/users.should register new user.executor": "Run",
    "Jest.POST /api/users.should reject register new user if request invalid (1).executor": "Run",
    "Jest.POST /api/users.should reject register new user if request invalid.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "D:/Project_Local/typescript/studi_kasus/RestFul-API/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "D:\\Project_Local\\typescript\\studi_kasus\\RestFul-API\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Jest.POST /api/users.should register new user">
    <configuration name="POST /api/users (1)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/test/user-test.test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/users (2)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/test/user-test.test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/users.should register new user" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/user-test.test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
        <test-name value="should register new user" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/users.should reject register new user if request invalid (1)" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/user-test.test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
        <test-name value="should reject register new user if request invalid" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/users.should reject register new user if request invalid" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/user-test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
        <test-name value="should reject register new user if request invalid" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/users.should reject register new user if request invalid" type="JavaScriptTestRunnerJest" temporary="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/user-test.test.ts" />
      <test-names>
        <test-name value="POST /api/users" />
        <test-name value="should reject register new user if request invalid" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.POST /api/users.should register new user" />
        <item itemvalue="Jest.POST /api/users.should reject register new user if request invalid (1)" />
        <item itemvalue="Jest.POST /api/users (2)" />
        <item itemvalue="Jest.POST /api/users (1)" />
        <item itemvalue="Jest.POST /api/users.should reject register new user if request invalid" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-WS-243.22562.222" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2c7b5bef-9368-4777-8eea-0a1869fe9348" name="Changes" comment="" />
      <created>1739597677063</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1739597677063</updated>
      <workItem from="1739597679128" duration="8263000" />
      <workItem from="1739696548833" duration="976000" />
      <workItem from="1739697592363" duration="14166000" />
      <workItem from="1739783418622" duration="6760000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/test/user-test.test.ts</url>
          <line>6</line>
          <properties lambdaOrdinal="-1" />
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>